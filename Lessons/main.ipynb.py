'''
A High-Performance Computing (HPC) dashboard is a graphical user interface (GUI) or web-based tool designed to provide users with insights and control over various aspects of a high-performance computing environment. HPC systems typically consist of a large number of interconnected computers or nodes working together to solve complex computational problems.

System Monitoring:

Real-time monitoring of system resources such as CPU usage, memory utilization, disk I/O, network traffic, and temperature. This helps users understand the current state of the HPC system and identify any potential bottlenecks or issues.

Job Management:

A dashboard may allow users to submit, monitor, and manage computational jobs running on the HPC system. This includes features such as job scheduling, priority setting, job status tracking, and job queue management.

Resource Allocation:

Users may be able to view and manage their allocated computing resources, such as the number of CPU cores, memory, and storage space. They may also have access to reporting and analytics tools for tracking resource usage over time.

Visualization:

Some HPC dashboards offer data visualization capabilities to help users analyze and interpret complex data generated by their computational simulations or experiments.

Alerts and Notifications:

The dashboard may provide alerts and notifications to users in case of system failures, job completion, or other important events.

User Authentication and Access Control:

To ensure security and prevent unauthorized access, HPC dashboards typically include user authentication mechanisms and access control features.
'''

import matplotlib.pyplot as plt

hpc_data = {
    'HPC1' : {'iteration_speed' : 90, 'calculation_speed' : 120},
    'HPC2' : {'iteration_speed' : 120, 'calculation_speed' : 80},
    'HPC3' : {'iteration_speed' : 100, 'calculation_speed' : 100}
}

hpc = list(hpc_data.keys())

iteration_speed = [data['iteration_speed'] for data in hpc_data.values()]
calculation_speed = [data['calculation_speed'] for data in hpc_data.values()]

plt.bar(hpc, iteration_speed, label='Iteration Speed')
plt.bar(hpc, calculation_speed, label='Calculation Speed', bottom=iteration_speed)

plt.xlabel('HPC Systems')
plt.ylabel('Performance Metrics')
plt.title('HPC Performance Metrics')

plt.legend()
plt.show()


import numpy as np

hpc_years = np.array([2020, 2021, 2022, 2023])
performance_data = {
    'HPC1': np.array([90, 95, 100, 105]),
    'HPC2': np.array([120, 110, 101, 90]),
    'HPC3': np.array([100, 105, 110, 115]),
}

plt.figure(figsize=(10,6))

for hpc, performance in performance_data.items():
    plt.plot(hpc_years, performance, label=hpc)

bubble_sizes = [500, 1000, 1500]

for i, hpc in enumerate(hpc_data.keys()):
    plt.scatter(hpc_years[-1],
                hpc_data[hpc]['calculation_speed'], s=bubble_sizes[i],
                alpha=.5, label=hpc)

plt.xlabel('Years')
plt.ylabel('Performance Metrics')

plt.title('HPC Performance Over Time')
plt.legend()
plt.show()